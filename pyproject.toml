[project]
name = "mcp-server-milvus"
version = "0.1.1.dev4"
description = "MCP server for Milvus"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]>=1.9.0",
    "pymilvus>=2.5.8",
]

[project.urls]
Homepage = "https://github.com/danchev/mcp-server-milvus"
Issues = "https://github.com/danchev/mcp-server-milvus/issues"

[project.scripts]
mcp-server-milvus = "mcp_server_milvus.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_server_milvus"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "python-semantic-release>=9.21.1",
    "ruff>=0.11.10",
    "ty>=0.0.1a4",
]

[tool.ruff]
line-length = 99
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "Q"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["awslabs"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"
[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "/home/ddanchev/Workspace/mcp-server-milvus"
no_git_verify = false
tag_format = "{version}"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.1"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
    "src/mcp_server_milvus/__init__.py:__version__"
]
update_changelog_on_bump = true

[semantic_release]
tag_format = "{version}"
version_variable = [
    "pyproject.toml:version",
    "src/mcp_server_milvus/__init__.py:__version__"
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
